% :- export key/1.

% :- dispose key(quote1).
% :- make_system_term key/1.
% key(QuotedName) = $reflect(QuotedName, Dynabase, Name, _),
%                   $get_key_for_expression(Dynabase, Name, QuotedName).


:- export list/1.
:- make_system_term list/1.
% for annotation that somethign is a list.  This will match against all list types
list_rec([]).
list_rec([_|A]) :- list_rec(A).

% the "builtin" prelude is not allowed to be recursive, so this has to reference another function which is allowed to be recursive
% if the make_system_term is recursive, then it will cause the startup processes to crash
list(A) :- list_rec(A).
% list([]).
% list([_|A]) :- list(A).


:- export list/2.
:- dispose list(quote1, eval).  % this is going to quote the type argument, but if we make quoting something that is already hapening, then could this have some issue?
:- make_system_term list/2.
% % allows for type annotation against something.  This

list_rec(Type, []).
list_rec(Type, [X|A]) :- Type(X), list_rec(Type, A).
list(Type, L) :- list_rec(Type, L).